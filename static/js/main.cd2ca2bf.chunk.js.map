{"version":3,"sources":["shared/baseURL.js","components/Menu.js","components/Footer.js","components/Header.js","components/ModalLogin.js","components/Loading.js","components/Home.js","components/FormContact.js","components/FormContactRedux.js","components/Contact.js","components/About.js","redux/ActionTypes.js","redux/comments.js","components/Dishdetail.js","redux/ActionCreators.js","components/Main.js","redux/dishes.js","redux/promotions.js","redux/leaders.js","redux/Forms.js","redux/configureStore.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","RenderMenuItem","dish","onClick","console","log","className","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","Breadcrumb","BreadcrumbItem","active","Footer","href","Header","React","Component","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","event","this","alert","username","value","password","remember","checked","preventDefault","setState","Fragment","Navbar","expand","NavbarToggler","NavbarBrand","process","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Loading","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","promoLoading","leaderLoading","promotion","leader","RenderListCards","disheErrMess","promoErrMess","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","FormContatctRedux","resetForm","baseState","firstname","lastname","telnum","email","agree","contactType","message","handleInputChange","handleSubmit","target","values","JSON","stringify","postFeedback","resetFeedbackForm","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","Contact","useState","open","setOpen","style","float","background","frameborder","border","allowfullscreen","tabindex","role","cursor","RenderLeader","leaders","Media","list","left","top","object","body","heading","About","CardHeader","title","ADD_COMMENT","ADD_COMMENTS","COMMENTS_FAILED","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","Comments","comments","action","ActionTypes","payload","comment","date","Date","toISOString","concat","RenderDish","tranformProps","RenderComments","postComment","dishId","commentsErrMess","author","Intl","DateTimeFormat","year","month","day","format","parse","CommentForm","showModalComment","rating","options","for","default","i","selected","DishDetails","dispatch","newComment","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","location","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","key","withRouter","connect","actions","reset","newFeedback","Dishes","Promotions","Leaders","InitialFeedback","ConfigureStore","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","getState","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd2ca2bf.chunk.js","sourcesContent":["export const baseUrl = 'http://localhost:3001/';","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport {baseUrl} from '../shared/baseURL';\r\n\r\nfunction RenderMenuItem({dish, onClick}) {\r\n    console.log(dish)\r\n    return(\r\n        <div  className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                 <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\"  src={baseUrl + dish.image} alt={dish.name}/>   \r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>  \r\n                </Link>                    \r\n            </Card>  \r\n        </div>       \r\n    );\r\n};\r\n      \r\nconst Menu = (props) =>{\r\n    \r\n        const menu = props.dishes.map(\r\n            (dish) => {\r\n                return(\r\n                    <RenderMenuItem\r\n                        key= {dish.id}\r\n                        dish = {dish}\r\n                       \r\n                     />\r\n                );\r\n                \r\n                \r\n        });\r\n        return( \r\n\r\n            <div className= \"container\"> \r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {menu}                    \r\n                </div>                  \r\n            </div>            \r\n        );\r\n}; export default Menu;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Footer= () =>{\r\n    return(\r\n    <div className='footer'>\r\n        <div className='container'>\r\n            <div className='row justify-content-center'>\r\n                <div className='col-4 offset-1 col-sm-2'>\r\n                    <h5>Links</h5>\r\n                    <ul className='list-unstyled'>\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>                        \r\n                    </ul>\r\n                </div>\r\n                <div className='col-7 col-sm-5'>\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n}; export default Footer;","import React,  { useState } from 'react';\r\nimport { Collapse, Jumbotron, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, Modal, ModalBody, ModalHeader, Button } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Form, Label, FormGroup, Input} from 'reactstrap';\r\nimport ModalLogin from './ModalLogin';\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        \r\n    }\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        \r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n            \r\n        event.preventDefault();\r\n\r\n    }\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }   \r\n\r\n    \r\n  \r\n    render(){\r\n        return(\r\n            <React.Fragment>        \r\n                <Navbar className=\"navbar-color\" expand=\"lg\">\r\n                    <div className='container'>\r\n                        <NavbarToggler onClick={this.toggleNav}/>                \r\n                            <NavbarBrand className='mr-auto' href='/'>\r\n                                <img src={`${process.env.PUBLIC_URL}/assets/images/logo.png`} height=\"30\" width=\"41\" alt='Ristorante Con Fusion' />\r\n                            </NavbarBrand>\r\n                            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                                <Nav navbar>\r\n                                    <NavItem className=\"ml-3\">\r\n                                        <NavLink className='nav-link nav-estilo' to='/home'>\r\n                                            <span className='fa fa-home fa-lg mr-1'/>\r\n                                              Home\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n        \r\n                                    <NavItem className=\"ml-3\">\r\n                                        <NavLink className='nav-link nav-estilo' to='/aboutus'>\r\n                                            <span  className=' fa fa-info fa-lg mr-1'/>\r\n                                             About Us\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n        \r\n                                    <NavItem className=\"ml-3\">\r\n                                        <NavLink className='nav-link nav-estilo' to='/menu'>\r\n                                            <span className='fa fa-list fa-lg mr-1'/>\r\n                                            Menu\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n        \r\n                                    <NavItem className=\"ml-3\"> \r\n                                        <NavLink className='nav-link nav-estilo' to='/contactus'>\r\n                                            <span className='fa fa-address-card fa-lg mr-1'/>\r\n                                             Contact Us                                    \r\n                                        </NavLink>\r\n                                    </NavItem>                            \r\n                                </Nav>\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                        <NavItem>\r\n                                            <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                        </NavItem>\r\n                                    </Nav>\r\n        \r\n                            </Collapse>                \r\n                    </div>\r\n                </Navbar>\r\n        \r\n                <Jumbotron>\r\n                    <div className='container'>\r\n                        <div className='row-row-header'>\r\n                            <div className='col-6 col sm-6'>\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p className='text-justify'>We take inspiration from the World's best cuisines,\r\n                                 and create a unique fusion experience. Our lipsmacking \r\n                                 creations will tickle your culinary senses!</p>\r\n        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal toggle={this.toggleModal} isOpen={this.state.isModalOpen} >\r\n                <ModalHeader >Login</ModalHeader>\r\n                <ModalBody> \r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username = input} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password = input}  />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                innerRef={(input) => this.remember = input}  />\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>             \r\n                </ModalBody>\r\n            </Modal>\r\n            </React.Fragment>\r\n            );\r\n        }   \r\n    \r\n\r\n}; export default Header;","import {Modal, ModalHeader, ModalBody, Form, Label, FormGroup, Input, Button} from 'reactstrap';\r\nimport React from 'react';\r\n\r\nclass ModalLogin extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);     \r\n\r\n    }\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        \r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n            \r\n        event.preventDefault();\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <Modal isOpen={this.props.isModalOpen} >\r\n                <ModalHeader>Loginss\r\n                \r\n                </ModalHeader>\r\n                <ModalBody> \r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username = input} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password = input}  />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                innerRef={(input) => this.remember = input}  />\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>             \r\n                </ModalBody>\r\n            </Modal>\r\n\r\n        );\r\n    }\r\n}; export default ModalLogin;\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}; ","import React from 'react';\r\nimport {Loading} from './Loading';\r\nimport { Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle } from 'reactstrap';\r\nimport {baseUrl} from '../shared/baseURL';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nconst RenderCard = ({item, isLoading, errMess}) => {\r\n    console.log(isLoading);\r\n   \r\n  \r\n        if (isLoading) {\r\n            return(\r\n                    <Loading />\r\n            );\r\n        }\r\n        else if (errMess) {\r\n            return(\r\n                    <h4>{errMess}</h4>\r\n            );\r\n        }\r\n         else{ \r\n            return( \r\n                    <div className=\"col-12 col-md m-1\">\r\n                        <FadeTransform in transformProps={{exitTransform:'scale(0.5) translateY(-50%)'}}>                        \r\n                            <Card>\r\n                                <CardImg src={baseUrl + item.image}/>\r\n                                <CardBody>\r\n                                    <CardTitle>{item.name}</CardTitle>\r\n                                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                                    <CardText className=\"text-justify\">{item.description}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </FadeTransform>\r\n                    </div>\r\n            );\r\n        }\r\n    \r\n};\r\nconst Home = (props) =>{\r\n   \r\n    console.log(props.dishesLoading);\r\n    console.log(props.promoLoading);\r\n    console.log(props.leaderLoading);\r\n    console.log(props.dish);\r\n    console.log(props.promotion)\r\n    console.log(props.leader)\r\n    const RenderListCards = () => {\r\n        return(\r\n            <div className=\"row align-items-start\">\r\n                <RenderCard key= {1}  item={props.dish} isLoading={props.dishesLoading} errMess={props.disheErrMess}/>\r\n                <RenderCard key ={2} item= {props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess}  />\r\n                <RenderCard key = {3} item= {props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n        </div> \r\n        );       \r\n                 \r\n    };\r\n    return(\r\n        <div  className='container'>\r\n            <div className=\"col-12 col-md m-1\">\r\n               <RenderListCards/>                \r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}; export default Home;","import React  from 'react';\r\nimport {Form, FormGroup, Label, Col, Input, Button, FormFeedback} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nclass FormContact extends React.Component{\r\n    constructor(props){       \r\n        \r\n        super(props);\r\n       \r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree:false,\r\n            contactType:\"Tel.\",\r\n            message:'',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n            \r\n        }\r\n        this.baseState = this.state; \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n\r\n    }\r\n    handleInputChange(event){\r\n        const {name, value} = event.target;\r\n       // const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        //const name = target.name;\r\n        if(event.target.type === 'checkbox'){\r\n            value = event.target.checked\r\n        }\r\n        this.setState({[name]:value});\r\n        \r\n    };\r\n  \r\n    handleSubmit(event){      \r\n        event.preventDefault();\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));  \r\n        this.resetForm();  \r\n        \r\n    };\r\n    resetForm = () => {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));  \r\n       \r\n        this.setState(this.baseState);\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n    }\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            {console.log(\"o tamané \" + firstname.length);\r\n            errors.firstname = 'First Name should be >= 3 characters';}\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n    \r\n    render(){\r\n        const errors = this.validate(\r\n                                        this.state.firstname, \r\n                                        this.state.lastname, \r\n                                        this.state.telnum, \r\n                                        this.state.email);\r\n            return(\r\n            <div className=\"col-12 col-md-9\">\r\n                <Form  innerRef={this.formRef} \r\n                       onSubmit={this.handleSubmit}>\r\n                   <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                    <FormGroup row>\r\n                        <Col md={{size: 6, offset: 2}}>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\"\r\n                                        name=\"agree\"\r\n                                        checked={this.state.agree}\r\n                                        onChange={this.handleInputChange} /> {' '}\r\n                                    <strong>May we contact you?</strong>\r\n                                </Label>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={{size: 3, offset: 1}}>\r\n                            <Input type=\"select\" name=\"contactType\"\r\n                                    value={this.state.contactType}\r\n                                    onChange={this.handleInputChange}>\r\n                                <option>Tel.</option>\r\n                                <option>Email</option>\r\n                            </Input>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                        <Col md={10}>\r\n                            <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                rows=\"12\"\r\n                                value={this.state.message}\r\n                                onChange={this.handleInputChange}></Input>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Col md={{size: 10, offset: 2}}>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Send Feedback\r\n                            </Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n             </Form>\r\n        </div>\r\n\r\n        );\r\n    }\r\n   \r\n     \r\n\r\n\r\n} export default FormContact;","import React  from 'react';\r\nimport {Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass FormContatctRedux extends React.Component{\r\n    constructor(props){   \r\n           \r\n        \r\n        super(props);       \r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree:false,\r\n            contactType:\"Tel.\",\r\n            message:'',\r\n           /* touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }*/\r\n           \r\n        }\r\n        console.log(props) ;\r\n        this.baseState = this.state; \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n       \r\n\r\n    }\r\n    \r\n    handleInputChange(event){\r\n        const {name, value} = event.target;\r\n       // const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        //const name = target.name;\r\n        if(event.target.type === 'checkbox'){\r\n            value = event.target.checked\r\n        }\r\n        this.setState({[name]:value});\r\n        \r\n    };\r\n    handleSubmit(values){   \r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));     \r\n       // event.preventDefault();\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n        \r\n        \r\n      this.resetForm();  \r\n        \r\n    };\r\n    resetForm = () => {      \r\n       this.setState(this.baseState);        \r\n    };\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n                <Form  model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                         <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                 placeholder=\"First Name\"\r\n                                 className=\"form-control\"\r\n                                 validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                }}\r\n                            />\r\n                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                         </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                placeholder=\"Last Name\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                }}\r\n                                />\r\n                                 <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                placeholder=\"Tel. Number\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                className=\"form-control\" \r\n                                validators={{\r\n                                    required, validEmail\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Col md={{size: 6, offset: 2}}>\r\n                            <div className=\"form-check\">\r\n                                <Label check>\r\n                                    <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                        className=\"form-check-input\"\r\n                                        /> {' '}\r\n                                        <strong>May we contact you?</strong>\r\n                                </Label>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={{size: 3, offset: 1}}>\r\n                            <Control.select model=\".contactType\" name=\"contactType\"\r\n                                className=\"form-control\">\r\n                                <option>Tel.</option>\r\n                                <option>Email</option>\r\n                            </Control.select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                        <Col md={10}>\r\n                            <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                rows=\"12\"\r\n                                className=\"form-control\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Col md={{size:10, offset: 2}}>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                            Send Feedback\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n\r\n        );\r\n    }\r\n\r\n} export default FormContatctRedux;\r\n","import React, { useState } from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport FormContact from './FormContact';\r\nimport FormContatctRedux from './FormContactRedux';\r\n//usar yup para validation\r\n\r\nconst Contact = (props) =>{\r\n    const [open, setOpen] = useState(false);\r\n    return(\r\n        <div className = 'container'>\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className='row row-content' style={{float : 'left', background: '#e4dede' }}>\r\n                <div className='col-12'>\r\n                    <h3 > Location Informations</h3>\r\n                </div>\r\n                <div className='col-12  col-sm-4 offset-sm-1'>\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className='col-12  col-sm-6  offset-sm-1'>\r\n                    <h5>Map of our Location</h5> \r\n                        <div>\r\n                            <iframe \r\n                             src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3691.17908595958!2d114.28275111426868!3d22.30906584821582!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x34040381be582409%3A0x5ca78cbef899f174!2s121%20Clear%20Water%20Bay%20Rd%2C%20Clear%20Water%20Bay%2C%20Hong%20Kong!5e0!3m2!1spt-BR!2sbr!4v1604597793228!5m2!1spt-BR!2sbr\" \r\n                             style =  {{ \r\n                                 width:\"600\", \r\n                                 height:\"450\", \r\n                                 frameborder:\"0\", \r\n                                 border:\"0\", \r\n                                 allowfullscreen:\"\",  tabindex:\"0\"}}>\r\n\r\n                             </iframe>\r\n                        </div>                 \r\n                </div>\r\n                <div className='col-12  col-sm-6 offset-sm-1 ' style={{}}>\r\n                    <div className='btn btn-group ' role='group'>\r\n                         <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\">\r\n                             <i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\">\r\n                            <i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\">\r\n                            <i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            <div className=\"row row-content\">\r\n                 <div className=\"col-12\">\r\n                    <h3  onClick={() => setOpen(!open)} style={{cursor: \"pointer\",}}>                             \r\n                    <span> <i className=\"fa fa-pencil fa-lg \"></i></span>   Send us your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                { \r\n                         //(open )?<FormContact/>: null\r\n                         (open )?<FormContatctRedux {...props}/>: null                 \r\n                }\r\n                </div>\r\n                \r\n                \r\n\r\n            </div>\r\n        </div>\r\n        );\r\n}; export default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media, CardSubtitle} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './Loading';\r\nimport {baseUrl} from '../shared/baseURL';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nconst RenderLeader = ({isLoading, errMess, leaders}) =>{\r\n       \r\n     if (isLoading) {\r\n            return(\r\n                    <Loading />\r\n            );\r\n     }\r\n    else if (errMess) {\r\n            return(\r\n                    <h4>{errMess}</h4>\r\n            );\r\n            \r\n    }else{\r\n        return(\r\n        <Media className=\"mt-3\" list> \r\n            <Stagger in >\r\n                {\r\n                \r\n                    leaders.map( (leader) => {\r\n                        return (\r\n                            <Fade in> \r\n                                <div key = {leader.id}>                        \r\n                                    <Media  className='mb-3'>\r\n                                        <Media left top href =\"#\">\r\n                                            <Media object src={ baseUrl + leader.image}/>             \r\n                                        </Media>                \r\n                                        <Media body top className='ml-4 mb-3 text-justify'>\r\n                                            <Media heading> {leader.name} </Media>\r\n                        \r\n                                                {leader.designation ? <CardSubtitle className=\"mt-2 mb-3 cardsubtitle\">{leader.designation}</CardSubtitle> : null}\r\n                        \r\n                                                {leader.description}\r\n                                            \r\n                                        </Media>                      \r\n                                    </Media>\r\n                                    <hr /> \r\n                                </div> \r\n                            </Fade> \r\n                        );\r\n                    })                     \r\n                }\r\n            </Stagger>\r\n         </Media> \r\n        );}   \r\n}\r\n\r\nfunction About(props) { \r\n    console.log(props.leaders) \r\n   \r\n        return(          \r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>About Us</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <h2>Our History</h2>\r\n                                <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                                <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-5\">\r\n                                <Card>\r\n                                    <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                                    <CardBody>\r\n                                        <dl className=\"row p-1\">\r\n                                            <dt className=\"col-6\">Started</dt>\r\n                                            <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                            <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                            <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                            <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                            <dd className=\"col-6\">$1,250,375</dd>\r\n                                            <dt className=\"col-6\">Employees</dt>\r\n                                            <dd className=\"col-6\">40</dd>\r\n                                        </dl>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <Card>\r\n                                    <CardBody className=\"bg-faded\">\r\n                                        <blockquote className=\"blockquote\">\r\n                                            <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                                I'm not hungry enough to eat six.</p>\r\n                                            <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                            <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                                P. Pepe, Diversion Books, 2014</cite>\r\n                                            </footer>\r\n                                        </blockquote>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                            <h2>Corporate Leadership</h2>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <RenderLeader  leaders = {props.leaders} errMess = {props.errMess} isLoading={props.isLoading}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        ); \r\n                        \r\n    \r\n    \r\n   \r\n        \r\n    \r\n}\r\n\r\nexport default About;   ","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n/** */\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n/** */\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n/** */\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const FEEDBACK_LOADING = 'FEEDBACK_LOADING';\r\nexport const FEEDBACK_FAILED = 'FEEDBACK_FAILED';","//  import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;\r\n          comment.id = state.comments.length;\r\n          comment.date = new Date().toISOString();\r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import React, {useState} from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, \r\n    BreadcrumbItem, Breadcrumb, Button, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\r\nimport {Link } from 'react-router-dom';\r\nimport {  Col, Label} from 'reactstrap';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form'\r\nimport { Loading } from './Loading';\r\nimport { Comments } from \"../redux/comments\";\r\nimport {baseUrl} from '../shared/baseURL';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n//import FormComment from './FormComment';\r\n//const comments = useSelector(state => state.comments)\r\n//const dispatch = useDispatch()\r\n\r\nconsole.log(Comments);\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\nfunction RenderDish({errMess, isLoading, dish}){   \r\n    console.log();\r\n    \r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (dish != null){ \r\n                return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FadeTransform in tranformProps={{ exitTransform:'scale(0.5) translateY(-50%0'}}>\r\n                        <Card>\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name}/>\r\n                            <CardBody>\r\n                                <CardTitle>{dish.name}</CardTitle>\r\n                                <CardText>{dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </FadeTransform>\r\n                </div>  \r\n              );\r\n        }     \r\n    \r\n}\r\nfunction RenderComments({comments, postComment, dishId, commentsErrMess}) { \r\n   \r\n    if (commentsErrMess) {\r\n        return(\r\n            <h4>{this.props.errMess}</h4>\r\n         );\r\n    } \r\n    else if(comments != null){\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comentários</h4>                \r\n                    <ul className=\"list-unstyled\"> \r\n                        <Stagger in >\r\n                            {comments.map((comment) => {  \r\n                                return( \r\n                                        <Fade in>                 \r\n                                            <li key={comment.id}>                        \r\n                                            <p>\r\n                                                {comment.comment} <br/>\r\n                                                -- {comment.author},\r\n                                    {new Intl.DateTimeFormat('en-US', {year:'numeric', month:'short', day:'2-digit'})\r\n                                                                .format( new Date(Date.parse(comment.date )))}\r\n                                            </p>\r\n                                            </li> \r\n                                    </Fade>  \r\n                                );        \r\n                            })}\r\n                        </Stagger>\r\n                    </ul>  \r\n                    <CommentForm dishId={dishId} postComment={postComment}/>               \r\n                </div> \r\n\r\n            )\r\n            \r\n    } else{\r\n            return(\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4> Be the first to comment</h4>\r\n                        <CommentForm dishId={dishId} postComment={postComment}/>  \r\n                    </div>\r\n            )\r\n        }\r\n};\r\n\r\n\r\nclass CommentForm extends React.Component { \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showModalComment:false  \r\n        };\r\n        this.options = [1, 2, 3, 4, 5];\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this); \r\n        console.log(this.props);          \r\n         \r\n    }\r\n   \r\n    toggleModal = () => {\r\n        console.log('click');\r\n        this.setState({showModalComment : !this.state.showModalComment})\r\n        \r\n        console.log(this.state.showModalComment)\r\n     } ; \r\n \r\n    handleSubmit =  (values) => { \r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);   \r\n    };  \r\n       \r\n\r\n   render(){\r\n       \r\n        return(\r\n       <div>\r\n           <Button  color='secondary' onClick = {this.toggleModal}> <span> <i className=\"fa fa-pencil fa-lg \"></i></span> Submit Comment</Button>\r\n           <Modal isOpen={this.state.showModalComment}>\r\n               <ModalHeader toggle={this.toggleModal}  >\r\n               Submit                 \r\n               </ModalHeader>\r\n               <ModalBody> \r\n               <LocalForm onSubmit={ ()=> this.handleSubmit}>\r\n                   <Row>\r\n                       <Label for=\"selectRating\" md={10}>Rating</Label>\r\n                       <Col md={12}>\r\n                           <Control.select \r\n                               model=\".seletRating\"\r\n                               name=\"seletRating\"\r\n                               default= '1'\r\n                               className=\"form-control custom-select mr-sm-2\">                             \r\n                                   { this.options.map( \r\n                                       (i) => {  \r\n                                           if(i === 1){\r\n                                            return(<option key={i} selected>{i}</option>)\r\n                                           }\r\n                                           return( <option key={i}>{i}</option>); \r\n                                   })}\r\n                           </Control.select>                    \r\n                       </Col> \r\n                       <Errors\r\n                                           className=\"text-danger\"\r\n                                           model=\".seletRating\"\r\n                                           show=\"touched\"\r\n                                           messages={{\r\n                                               required: 'Required'                                           \r\n                                           }}\r\n                               />                \r\n                   </Row>\r\n   \r\n                   <Row>\r\n                       <Label htmlFor=\"author\" md={10}> Your Name</Label>\r\n                           <Col md={12}>\r\n                               <Control.text \r\n                                   model=\".author\" \r\n                                   id=\"author\" name=\"author\"\r\n                                   placeholder=\"Your Name\"\r\n                                   className=\"form-control\"\r\n                                   validators={{\r\n                                       required,\r\n                                       minLength: minLength(3),\r\n                                       maxLength: maxLength(15)\r\n                                   }}\r\n                               />\r\n                               <Errors\r\n                                           className=\"text-danger\"\r\n                                           model=\".name\"\r\n                                           show=\"touched\"\r\n                                           messages={{\r\n                                               required: 'Required',\r\n                                               minLength: 'Must be greater than 2 characters',\r\n                                               maxLength: 'Must be 15 characters or less'\r\n                                           }}\r\n                               />\r\n                           </Col>        \r\n   \r\n   \r\n                   </Row>\r\n   \r\n                   <Row className=\"form-group\">\r\n                           <Label htmlFor=\"comment\" md={10}> Comment</Label>\r\n                           <Col md={12}>\r\n                               <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                   rows=\"6\"\r\n                                   className=\"form-control\" />\r\n                           </Col>\r\n                       </Row>\r\n                   <Row>\r\n                       <Col md={{size:10, offset: 0}}>\r\n                       <Button type='button' color='primary' onClick = {this.toggleModal}>Submit</Button> \r\n                       </Col>\r\n                   </Row>\r\n   \r\n               </LocalForm>   \r\n               </ModalBody>\r\n       </Modal>\r\n       </div>\r\n       \r\n   );    \r\n}\r\n}\r\n\r\n\r\nclass DishDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props.isLoading);\r\n        \r\n    } \r\n    render(){  \r\n        if (this.props.isLoading) {\r\n            return(\r\n                    <Loading />\r\n            );\r\n        }\r\n        else if (this.props.errMess) {\r\n            return(\r\n                    <h4>{this.props.errMess}</h4>\r\n            );\r\n        }\r\n        else{\r\n            console.log('aqui');\r\n            console.log(this.props);\r\n            \r\n            return(\r\n                \r\n                <div className= \"container\"> \r\n                    <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>{this.props.dish.name}</h3>\r\n                                <hr />\r\n                            </div>                \r\n                        </div>           \r\n                    <div className=\"row\">\r\n                    <RenderDish \r\n                        dish={this.props.dish}\r\n                        isLoading={this.props.isLoading}\r\n                        errMess={this.props.errMess}\r\n                    /> \r\n\r\n                    <RenderComments \r\n                        comments = {this.props.comments}\r\n                        postComment={this.props.postComment}\r\n                        dishId={this.props.dish.id}\r\n                        commentsErrMess={this.props.commentsErrMess}\r\n\r\n                                \r\n                        />                                 \r\n                    </div>                    \r\n                \r\n                </div>\r\n                \r\n\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default DishDetails;","import * as ActionTypes  from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseURL';\r\nimport fetch from 'cross-fetch';\r\n//const axios = require('axios').default;\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\nexport const addFeedback = (feedbackForm) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedbackForm\r\n});\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      telnum: telnum,\r\n      email: email,\r\n      agree:agree,\r\n      contactType: contactType,\r\n      message:message\r\n  }; \r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};               \r\nexport  const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return  fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n/** */\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n/** */\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n/** */\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n    \r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","import React, { Component } from 'react';\r\nimport Menu from './Menu'\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport Home from './Home';\r\nimport Contact from './Contact';\r\nimport About from './About';\r\nimport DishDetail from './Dishdetail'\r\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback} from '../redux/ActionCreators';\r\nimport DishDetails from './Dishdetail';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n  }\r\n  const mapDispatchToProps = dispatch => {\r\n      return{       \r\n        resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n       // addComment: (dishId, rating, author, comment) => {dispatch( addComment(dishId, rating, author, comment)) },\r\n        fetchDishes:   () => { dispatch(fetchDishes())},\r\n        fetchComments: () => {dispatch(fetchComments())},\r\n        fetchPromos:   () => {dispatch(fetchPromos())},\r\n        fetchLeaders:  () => {dispatch(fetchLeaders())},        \r\n        postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n        postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => \r\n        dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n      }\r\n  }    \r\n    \r\n  \r\n class Main  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n       \r\n               \r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        //this.props.addComment();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders(); \r\n       \r\n\r\n       \r\n      }\r\n    render() { \r\n        const HomePage = () => {\r\n            return(\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                    />\r\n            );\r\n        };\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetails\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    //addComment={this.props.addComment}\r\n                    postComment={this.props.postComment}               \r\n                 />\r\n            );           \r\n        }         \r\n\r\n      \r\n        return(\r\n            <div className='container'>\r\n                <Header/>\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\r\n                            <Switch location={this.props.location}>\r\n                                <Route path='/home' component={HomePage}/>\r\n                                <Route exact path='/menu' component={ () => <Menu  dishes={this.props.dishes.dishes} />} />\r\n                                <Route  path='/menu/:dishId' component= {DishWithId} />\r\n                                <Route exact path='/contactus' component={() => <Contact \r\n                                                                                    resetFeedbackForm={this.props.resetFeedbackForm} \r\n                                                                                    postFeedback={this.props.postFeedback} />} \r\n                                                                                />\r\n                                <Route exact path='/aboutus' component={ () => <About\r\n                                                                                leaders={this.props.leaders.leaders}\r\n                                                                                isLoading={this.props.leaders.isLoading}\r\n                                                                                errMess={this.props.leaders.errMess} />} \r\n                                                                                />\r\n                                <Redirect to='/home'/>\r\n                            </Switch> \r\n                     </CSSTransition>\r\n                </TransitionGroup>             \r\n                <Footer/>\r\n            </div>\r\n\r\n        );\r\n        \r\n    }\r\n} \r\nexport default  withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { PROMOTIONS } from '../shared/promotions';\r\n\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","//import { LEADERS } from '../shared/leaders';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree:false,\r\n    contactType:\"Tel.\",\r\n    message:''\r\n};","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './Forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore( combineReducers(\r\n        {\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),applyMiddleware(thunk, logger)\r\n        )\r\n    \r\n \r\n    console.log(store.getState());\r\n    return store;\r\n}","import React from \"react\";\r\nimport './App.css';\r\nimport Main from './components/Main';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport {ConfigureStore} from './redux/configureStore';\r\n\r\n\r\n//const store = ConfigureStore();\r\nclass App extends React.Component{  \r\n  \r\n  render(){\r\n    return (\r\n      <Provider store= {ConfigureStore()}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Main/>\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>    \r\n    );\r\n  } \r\n}; export default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  \r\n    <App />,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}